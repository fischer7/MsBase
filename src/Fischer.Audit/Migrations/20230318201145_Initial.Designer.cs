// <auto-generated />
using System;
using Fischer.Audit.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fischer.Audit.Migrations
{
    [DbContext(typeof(AuditDbContext))]
    [Migration("20230318201145_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Audit")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fischer.Audit.Domain.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("AuditKind")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EntityId")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Audit", "Audit");
                });

            modelBuilder.Entity("Fischer.Audit.Domain.AuditProp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuditId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsPrimaryKey")
                        .HasColumnType("boolean");

                    b.Property<string>("NewValue")
                        .HasColumnType("text");

                    b.Property<string>("OldValue")
                        .HasColumnType("text");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("AuditProp", "Audit");
                });

            modelBuilder.Entity("Fischer.Audit.Domain.AuditProp", b =>
                {
                    b.HasOne("Fischer.Audit.Domain.Audit", "Audit")
                        .WithMany("Props")
                        .HasForeignKey("AuditId")
                        .IsRequired();

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("Fischer.Audit.Domain.Audit", b =>
                {
                    b.Navigation("Props");
                });
#pragma warning restore 612, 618
        }
    }
}
